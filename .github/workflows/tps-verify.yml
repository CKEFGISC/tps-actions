name: TPS verify

on:
  workflow_call:
    inputs:
      problems:
        default: ''
        type: string
      runs-on:
        default: 'ubuntu-latest'
        required: false
        type: string

jobs:
  pre-verify:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 3
    outputs:
      problems: ${{ steps.run-problems.outputs.problems }}
    env:
      FLAGPATH: $RUNNER_TEMP/flags
    steps:
      - uses: actions/checkout@v3

      - name: Get problems
        id: all-problems
        uses: TNFSH-Programming-Contest/tps-actions/.github/actions/get-problems@main

      - name: Make flags dir
        run: |
          mkdir -p $FLAGPATH

      - name: Get changes
        if: github.event_name == 'push'
        id: changes
        uses: TNFSH-Programming-Contest/tps-actions/.github/actions/get-changes@main

      - name: Env 1
        if: github.event_name == 'push'
        run: |
          echo "${{ steps.changes.outputs.changes }}"
          echo "${{ fromJson(steps.changes.outputs.changes).verify }}"
          echo "REQUEST=${{ fromJson(steps.changes.outputs.changes).verify }}" >> $GITHUB_ENV

      - name: Env 2
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "${{ inputs.problems }}"
          echo "REQUEST=${{ inputs.problems }}" >> $GITHUB_ENV

      - name: Env 3
        run: |
          echo $REQUEST

      - name: Filter problems
        id: run-problems
        uses: TNFSH-Programming-Contest/tps-actions/.github/actions/run-problems@main
        with:
          requests: ${{ env.REQUEST }}

  verify:
    if: ${{ needs.pre-verify.outputs.problems != '[]' && needs.pre-verify.outputs.problems != '' }}
    needs: [pre-verify]
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 3
    strategy:
      matrix:
        problem: ${{ fromJson(needs.pre-verify.outputs.problems) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - uses: TNFSH-Programming-Contest/tps-actions/.github/actions/install-tps@main
        if: ${{ runner.name == 'Hosted Agent' || startsWith(runner.name, 'GitHub Actions') }}

      - name: Verify
        working-directory: p${{ matrix.problem }}
        run: |
          set +e

          tps verify | tee verify-result.txt
          grep "ERROR:" verify-result.txt >/dev/null
          if [ $? -eq 0 ]; then
            exit 1
          fi
